#!/system/bin/sh

user_cpu_table="/cpu_table_location"
if [ $user_cpu_table != "" -a -e $user_cpu_table ]; then	
	tmp_available_freq=(`cat $user_cpu_table`)
elif [ -e /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_frequencies ]; then	
	tmp_available_freq=(`cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_frequencies`)
elif [ -e /sys/power/cpufreq_table ]; then
	tmp_available_freq=(`cat /sys/power/cpufreq_table`)
else
	tmp_available_freq=( 384000 486000 594000 702000 810000 918000 1026000 1134000 1242000 1350000 1458000 1512000 )
fi;
available_freq=()
for freq in "${tmp_available_freq[@]}";
do
	i=1
	for freq1 in "${tmp_available_freq[@]}";
	do
		if [ $freq1 -lt $freq ]; then
			i=$(($i+1))
		fi;
 	done
	available_freq[$i]=$freq
done

max_level=${#available_freq[@]}
gap_level=$(($max_level/3))
middle_level=$(($max_level-$(($gap_level/2))))
low_level=$(($max_level-$gap_level))

cpu_prev_total=0
cpu_prev_idle=0
cpu_usage=0
cpu0_prev_total=0
cpu0_prev_idle=0
cpu0_usage=0
cpu1_prev_total=0
cpu1_prev_idle=0
cpu1_usage=0
cpu2_prev_total=0
cpu2_prev_idle=0
cpu2_usage=0
cpu3_prev_total=0
cpu3_prev_idle=0
cpu3_usage=0
get_cpu_usage()
{
	if [ $1 == "0" ]; then
		cpu=(`cat /proc/stat | busybox grep '^cpu0 '`)
		tmp_cpu_prev_idle=$cpu0_prev_idle
		tmp_cpu_prev_total=$cpu0_prev_total
	elif [ $1 == "1" ]; then
		cpu=(`cat /proc/stat | busybox grep '^cpu1 '`)
		tmp_cpu_prev_idle=$cpu1_prev_idle
		tmp_cpu_prev_total=$cpu1_prev_total
	elif [ $1 == "2" ]; then
		cpu=(`cat /proc/stat | busybox grep '^cpu2 '`)
		tmp_cpu_prev_idle=$cpu2_prev_idle
		tmp_cpu_prev_total=$cpu2_prev_total
	elif [ $1 == "3" ]; then
		cpu=(`cat /proc/stat | busybox grep '^cpu3 '`)
		tmp_cpu_prev_idle=$cpu3_prev_idle
		tmp_cpu_prev_total=$cpu3_prev_total
	else
		cpu=(`cat /proc/stat | busybox grep '^cpu '`)
		tmp_cpu_prev_idle=$cpu_prev_idle
		tmp_cpu_prev_total=$cpu_prev_total
	fi;
	unset cpu[0]
	idle=${cpu[4]}

	total=0
	for value in "${cpu[@]}";
	do
		total=$(($total+$value))
	done

	diff_idle=$(($idle-$tmp_cpu_prev_idle))
	diff_total=$(($total-$tmp_cpu_prev_total))
	if [ $diff_total -ne 0 ]; then
		usage=$(((1000*(($diff_total)-($diff_idle))/($diff_total)+5)/10))
		if [ $usage -ge 100 ]; then
			usage=100
		fi;
		if [ $usage -le 0 ]; then
			usage=0
		fi;
	else
		usage=0
	fi;

	if [ $1 == "0" ]; then
		cpu0_prev_idle=$idle
		cpu0_prev_total=$total
		cpu0_usage=$usage
	elif [ $1 == "1" ]; then
		cpu1_prev_idle=$idle
		cpu1_prev_total=$total
		cpu1_usage=$usage
	elif [ $1 == "2" ]; then
		cpu2_prev_idle=$idle
		cpu2_prev_total=$total
		cpu2_usage=$usage
	elif [ $1 == "3" ]; then
		cpu3_prev_idle=$idle
		cpu3_prev_total=$total
		cpu3_usage=$usage
	else
		cpu_prev_idle=$idle
		cpu_prev_total=$total
		cpu_usage=$usage
	fi;
}

interactive="no"
cpu0_interactive="no"
cpu1_interactive="no"
cpu2_interactive="no"
cpu3_interactive="no"

cpu0_count=0
cpu1_count=0
cpu2_count=0
cpu3_count=0

cpu0_limit1=30
cpu0_limit2=50
cpu1_limit1=30
cpu1_limit2=50
cpu2_limit1=35
cpu2_limit2=55
cpu3_limit1=40
cpu3_limit2=60

while [ 1 ];
do
	busybox usleep 1000000
	
	#get_cpu_usage all
	#echo "cpu_usage : $cpu_usage"
	
	if [ $cpu0_interactive == "no" ]; then
		echo "interactive" > /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor 
		cpu0_interactive="yes"
	fi;
	
	get_cpu_usage 0
	cpu0_max_location="/sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq"
	cpu0_max_freq=`cat $cpu0_max_location`
	
	if [ $cpu0_count -le 0 ]; then
		if [ $cpu0_usage -lt $cpu0_limit1 ]; then
			if [ $cpu0_max_freq -ne ${available_freq[$low_level]} ]; then
				echo ${available_freq[$low_level]} > $cpu0_max_location
			fi;
		elif [ $cpu0_usage -ge $cpu0_limit1 -a $cpu0_usage -lt $cpu0_limit2 ]; then
			if [ $cpu0_max_freq -ne ${available_freq[$middle_level]} ]; then
				echo ${available_freq[$middle_level]} > $cpu0_max_location
				cpu0_count=1
			fi;
		else
			if [ $cpu0_max_freq -ne ${available_freq[$max_level]} ]; then
				echo ${available_freq[$max_level]} > $cpu0_max_location
				cpu0_count=2
			fi;
		fi;
	else
		cpu0_count=$(($cpu0_count-1))
	fi;
	
	if [ `cat /sys/devices/system/cpu/cpu1/online` -eq 1 ]; then
		if [ $cpu1_interactive == "no" ]; then
			echo "interactive" > /sys/devices/system/cpu/cpu1/cpufreq/scaling_governor 
			cpu1_interactive="yes"
		fi;
	
		get_cpu_usage 1
		cpu1_max_location="/sys/devices/system/cpu/cpu1/cpufreq/scaling_max_freq"
		cpu1_max_freq=`cat $cpu1_max_location`
		
		if [ $cpu1_count -le 0 ]; then
			if [ $cpu1_usage -lt $cpu1_limit1 ]; then
				if [ $cpu1_max_freq -ne ${available_freq[$low_level]} ]; then
					echo ${available_freq[$low_level]} > $cpu1_max_location
				fi;
			elif [ $cpu1_usage -ge $cpu1_limit1 -a $cpu1_usage -lt $cpu1_limit2 ]; then
				if [ $cpu1_max_freq -ne ${available_freq[$middle_level]} ]; then
					echo ${available_freq[$middle_level]} > $cpu1_max_location
					cpu1_count=1
				fi;
			else
				if [ $cpu1_max_freq -ne ${available_freq[$max_level]} ]; then
					echo ${available_freq[$max_level]} > $cpu1_max_location
					cpu1_count=2
				fi;
			fi;
		else
			cpu1_count=$(($cpu1_count-1))
		fi;
	else
		cpu1_count=0
	fi;
	
	if [ `cat /sys/devices/system/cpu/cpu2/online` -eq 1 ]; then
		if [ $cpu2_interactive == "no" ]; then
			echo "interactive" > /sys/devices/system/cpu/cpu2/cpufreq/scaling_governor 
			cpu2_interactive="yes"
		fi;
	
		get_cpu_usage 2
		cpu2_max_location="/sys/devices/system/cpu/cpu2/cpufreq/scaling_max_freq"
		cpu2_max_freq=`cat $cpu2_max_location`
		
		if [ $cpu2_count -le 0 ]; then
			if [ $cpu2_usage -lt $cpu2_limit1 ]; then
				if [ $cpu2_max_freq -ne ${available_freq[$low_level]} ]; then
					echo ${available_freq[$low_level]} > $cpu2_max_location
				fi;
			elif [ $cpu2_usage -ge $cpu2_limit1 -a $cpu2_usage -lt $cpu2_limit2 ]; then
				if [ $cpu2_max_freq -ne ${available_freq[$middle_level]} ]; then
					echo ${available_freq[$middle_level]} > $cpu2_max_location
					cpu2_count=1
				fi;
			else
				if [ $cpu2_max_freq -ne ${available_freq[$max_level]} ]; then
					echo ${available_freq[$max_level]} > $cpu2_max_location
					cpu2_count=2
				fi;
			fi;
		else
			cpu2_count=$(($cpu2_count-1))
		fi;
	else
		cpu2_count=0
	fi;
	
	if [ `cat /sys/devices/system/cpu/cpu3/online` -eq 1 ]; then
		if [ $cpu3_interactive == "no" ]; then
			echo "interactive" > /sys/devices/system/cpu/cpu3/cpufreq/scaling_governor 
			cpu3_interactive="yes"
		fi;
	
		get_cpu_usage 3
		cpu3_max_location="/sys/devices/system/cpu/cpu3/cpufreq/scaling_max_freq"
		cpu3_max_freq=`cat $cpu3_max_location`
		
		if [ $cpu3_count -le 0 ]; then
			if [ $cpu3_usage -lt $cpu3_limit1 ]; then
				if [ $cpu3_max_freq -ne ${available_freq[$low_level]} ]; then
					echo ${available_freq[$low_level]} > $cpu3_max_location
				fi;
			elif [ $cpu3_usage -ge $cpu3_limit1 -a $cpu3_usage -lt $cpu3_limit2 ]; then
				if [ $cpu3_max_freq -ne ${available_freq[$middle_level]} ]; then
					echo ${available_freq[$middle_level]} > $cpu3_max_location
					cpu3_count=1
				fi;
			else
				if [ $cpu3_max_freq -ne ${available_freq[$max_level]} ]; then
					echo ${available_freq[$max_level]} > $cpu3_max_location
					cpu3_count=2
				fi;
			fi;
		else
			cpu3_count=$(($cpu3_count-1))
		fi;
	else
		cpu3_count=0
	fi;
	
	if [ $cpu0_interactive == "yes" -a $cpu1_interactive == "yes" -a $cpu2_interactive == "yes" -a $cpu3_interactive == "yes" -a $interactive == "no" ]; then
		echo "20000" > /sys/devices/system/cpu/cpufreq/interactive/above_hispeed_delay
		echo "0" > /sys/devices/system/cpu/cpufreq/interactive/boost
		echo "80000" > /sys/devices/system/cpu/cpufreq/interactive/boostpulse_duration
		echo "99" > /sys/devices/system/cpu/cpufreq/interactive/go_hispeed_load
		echo ${available_freq[$middle_level]} > /sys/devices/system/cpu/cpufreq/interactive/hispeed_freq
		echo "80000" > /sys/devices/system/cpu/cpufreq/interactive/min_sample_time
		echo "95" > /sys/devices/system/cpu/cpufreq/interactive/target_loads
		echo "20000" > /sys/devices/system/cpu/cpufreq/interactive/timer_rate
		echo "80000" > /sys/devices/system/cpu/cpufreq/interactive/timer_slack
		interactive="yes"
	fi;
done;